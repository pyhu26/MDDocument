@using MatBlazor
@using Microsoft.AspNetCore.Components
@using System.IO

<MatNavMenu>
    <MatNavSubMenu @bind-Expanded="@navSubMenuOpenState">
        <MatNavSubMenuHeader>
            <MatNavItem AllowSelection="false"><MatIcon Icon="all_inbox"></MatIcon>&nbsp; Document </MatNavItem>
        </MatNavSubMenuHeader>
        <MatNavSubMenuList>
            <MatNavItem Href="#">Item 3.A&nbsp; <MatIcon Icon="backup"></MatIcon></MatNavItem>


            @if (DirectoryInfos == null)
            {
                <MatNavItem> no files C&nbsp; <MatIcon Icon="explore"></MatIcon></MatNavItem>
            }
            else
            {
                //한단계 아래에 있는 폴더만 서ㅊ
                @foreach (var di in DirectoryInfos.GetDirectories())
                {
                    foreach (var file in di.GetFiles())
                    {
                        <MatNavItem> @file.Name C&nbsp; <MatIcon Icon="explore"></MatIcon></MatNavItem>
                    }
                }

                //루트에 있는 파일들
                foreach (var file in DirectoryInfos.GetFiles())
                {
                    <MatNavItem> @file.Name C&nbsp; <MatIcon Icon="explore"></MatIcon></MatNavItem>
                }
            }



        </MatNavSubMenuList>
    </MatNavSubMenu>
</MatNavMenu>


@code
        {

    bool navSubMenuOpenState;
    
    DirectoryInfo DirectoryInfos {get; set;}

    
    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        await GetDirectoryInfoAsync();
    }
    
    async Task GetDirectoryInfoAsync()
    {
        string currPath = Path.Combine( Environment.CurrentDirectory, "MdFiles");
        DirectoryInfo di = new DirectoryInfo(currPath);
        
        this.DirectoryInfos = di;
    }

}